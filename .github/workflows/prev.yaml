name: CI Workflow

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - main

jobs:
  pytest:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
name: CI Workflow

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - main

jobs:
  pytest:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest --junitxml=reports/junit.xml

      - name: Upload JUnit test report
        uses: actions/upload-artifact@v2
        with:
          name: junit-report
          path: reports/junit.xml

  html-report:
    runs-on: self-hosted
    needs: pytest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download JUnit report
        uses: actions/download-artifact@v2
        with:
          name: junit-report
          path: reports

      - name: Install junit2html
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip
          pip3 install junit2html

      - name: Convert JUnit XML to HTML
        run: |
          ~/.local/bin/junit2html reports/junit.xml reports/junit.html

      - name: Upload HTML report
        uses: actions/upload-artifact@v2
        with:
          name: html-report
          path: reports/junit.html

      - name: HTML Preview
        id: html_preview
        uses: pavi2410/html-preview-action@v2
        with:
          html_file: 'reports/junit.html'

      - name: Debug Output
        run: echo "HTML Preview URL: ${{ steps.html_preview.outputs.url }}"

      - name: Post HTML preview link as comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = `{{ steps.html_preview.outputs.url }}`;
            const comment = `ðŸš€ [Preview HTML File](${previewUrl})`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest --junitxml=reports/junit.xml

      - name: Upload JUnit test report
        uses: actions/upload-artifact@v2
        with:
          name: junit-report
          path: reports/junit.xml

  html-report:
    runs-on: self-hosted
    needs: pytest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download JUnit report
        uses: actions/download-artifact@v2
        with:
          name: junit-report
          path: reports

      - name: Install junit2html
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip
          pip3 install junit2html

      - name: Convert JUnit XML to HTML
        run: |
          ~/.local/bin/junit2html reports/junit.xml reports/junit.html

      - name: Upload HTML report
        uses: actions/upload-artifact@v2
        with:
          name: html-report
          path: reports/junit.html

      - name: HTML Preview
        id: html_preview
        uses: pavi2410/html-preview-action@v2
        with:
          html_file: 'reports/junit.html'

      - name: Post HTML preview link as comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN_GITHUB }}
          script: |
            const previewUrl = `{{ steps.html_preview.outputs.url }}`;
            const comment = `ðŸš€ [Preview HTML File](${previewUrl})`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
